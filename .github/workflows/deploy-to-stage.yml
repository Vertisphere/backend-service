name: Deploy to Staging

on:
  issue_comment:
    types: [created]

env:
  PROJECT_ID: ordrport-nonprod
  REGION: northamerica-northeast2
  REPOSITORY: ordrport-nonprod-registry
  IMAGE_NAME: ordrport-api
  TERRAFORM_REPO: Vertisphere/ordrport-terraform
  TERRAFORM_FILE_PATH_STAGE: ordrport-nonprod/CloudRunService.tf

jobs:
  # Check if comment is on a PR and contains the deploy command
  check-deploy-command:
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'deploy to stage')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deployment command detected"

  build-and-deploy-to-stage:
    needs: [check-deploy-command]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      image_digest: ${{ steps.image-digest.outputs.IMAGE_DIGEST }}
      
    steps:
    # Techincally, the docker build push action does thi for us,
    # but since we're working off a PR comment, we play it safe
    - name: Checkout code
      uses: actions/checkout@v3
      with:
      # This won't work if the PR comment is from a closed PR but low probability case
        ref: refs/pull/${{ github.event.issue.number }}/head
      
    - name: Google Auth
      id: google-auth
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.google-auth.outputs.auth_token }}
        
    - name: Build and push image
      id: build-push
      uses: docker/build-push-action@v4
      with:
        context: ./middleware
        file: ./middleware/Dockerfile
        platforms: linux/amd64
        push: true
        tags: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:stage-pr-${{ github.event.issue.number }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Get image digest
      id: image-digest
      run: |
        FULL_DIGEST="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}@${{ steps.build-push.outputs.digest }}"
        echo "IMAGE_DIGEST=$FULL_DIGEST" >> $GITHUB_ENV
        echo "IMAGE_DIGEST=$FULL_DIGEST" >> $GITHUB_OUTPUT
        
    - name: Checkout Terraform repo
      uses: actions/checkout@v3
      with:
        repository: ${{ env.TERRAFORM_REPO }}
        token: ${{ secrets.TERRAFORM_REPO_PAT }}
        
    - name: Set up branch
      run: |
        git checkout -b stage-deploy-pr-${{ github.event.issue.number }}
        
    - name: Update Terraform file for staging
      run: |
        # Update the image SHA in the staging Terraform file
        sed -i 's|@sha256:[a-f0-9]\+|@'"${IMAGE_DIGEST#*@}"'|g' ${{ env.TERRAFORM_FILE_PATH_STAGE }}
        
    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add ${{ env.TERRAFORM_FILE_PATH_STAGE }}
        git commit -m "Deploy to staging from PR #${{ github.event.issue.number }}"
        git push origin stage-deploy-pr-${{ github.event.issue.number }}
        
    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.TERRAFORM_REPO_PAT }}
        path: .
        commit-message: "Deploy to staging from PR #${{ github.event.issue.number }}"
        branch: stage-deploy-pr-${{ github.event.issue.number }}
        delete-branch: true
        base: main
        title: "Deploy to staging from PR #${{ github.event.issue.number }}"
        body: |
          This PR updates the staging Cloud Run image from PR #${{ github.event.issue.number }}
          
          Image: ${{ github.event.issue.number }}
          
          Automated PR created by GitHub Actions.
        
    - name: Comment on PR
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          ðŸš€ Deployed to staging environment!
          
          Image: ${{ env.IMAGE_DIGEST }}
          
          You can view the changes in the staging environment.